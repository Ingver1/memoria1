name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  lint-test:
    name: Lint & Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: |
            ${{ runner.os }}-pip-
            ${{ hashFiles('**/pyproject.toml') }}-
            ${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (dev)
        run: |
          python -m pip install --upgrade pip
          pip install '.[dev]'

      - name: Ruff static analysis
        run: ruff check .

      - name: Mypy type checking
        run: mypy memory_system

      - name: Run tests
        run: pytest -q -m "not perf"

  # optional nightly job
  # schedule:
  #   - cron: '0 3 * * *'
  #   steps:
  #     - run: pytest -q -m perf

  docker-build-publish:
    name: Build & Publish Docker image
    runs-on: ubuntu-latest
    needs: lint-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:latest
